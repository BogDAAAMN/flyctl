#user nginx;

# Run in the foreground
daemon off;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Log errors to stdout
error_log /dev/stdout info;

events {
	# The maximum number of simultaneous connections that can be opened by
	# a worker process.
	worker_connections 1024;
}

http {
	# Includes mapping of file name extensions to MIME types of responses
	# and defines the default type.
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	# Don't tell nginx version to the clients
	server_tokens off;

	# Specifies the maximum accepted body size of a client request, as
	# indicated by the request header Content-Length. If the stated content
	# length is greater than this size, then the client receives the HTTP
	# error code 413. Set to 0 to disable. Default is '1m'.
	client_max_body_size 500m;

	# Sendfile copies data between one FD and other from within the kernel,
	# which is more efficient than read() + write(). Default is off.
	sendfile on;

	# Causes nginx to attempt to send its HTTP response head in one packet,
	# instead of using partial frames. Default is 'off'.
	tcp_nopush on;

	# Helper variable for proxying websockets.
	map $http_upgrade $connection_upgrade {
		default upgrade;
		'' close;
	}

	# Specifies the main log format.
	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
			'$status $body_bytes_sent "$http_referer" '
			'"$http_user_agent" "$http_x_forwarded_for"';

	# Log to stdout
  access_log /dev/stdout;

  server {
    listen [::]:8080;
    listen 8080 default_server;
    root /app/web/dist;
    proxy_set_header X-Forwarded-Proto $scheme;

   if ($http_x_forwarded_proto = 'http') {
     return 301 https://<domain>$request_uri;
     break;
   }

   location /.redwood/functions {
       proxy_pass http://localhost:8911/.redwood/functions;
       break;

   }

    location ~* \.(js|css|png|jpg)$ {
        expires max;
        break;
    }

    location / {
       try_files $uri $uri/ /index.html;
    }

  }
}
